import{draw3DHand,scene}from"./scene.js";import{flipHorizontal}from"./constants.js";var net,handMesh,video;export var hand;export const loadPoseNet=async()=>{net=await posenet.load({architecture:"MobileNetV1",outputStride:16,inputResolution:513,multiplier:.75}),video=await loadVideo(),guiState.net=net,video&&detectPoseInRealTime(video)};export const guiState={algorithm:"single-pose",input:{mobileNetArchitecture:"0.75",outputStride:16,imageScaleFactor:.5},singlePoseDetection:{minPoseConfidence:.1,minPartConfidence:.5},output:{showVideo:!1,showPoints:!0},net:null};const loadVideo=async()=>{const e=await setupCamera();return e.play(),e},setupCamera=async()=>{if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");const e=document.getElementById("video");e.width=window.innerWidth,e.height=window.innerHeight;const t=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:window.innerWidth,height:window.innerHeight}});return e.srcObject=t,new Promise(t=>e.onloadedmetadata=(()=>t(e)))},detectPoseInRealTime=async e=>{async function t(){const i=guiState.input.imageScaleFactor,n=+guiState.input.outputStride;let o,a,s=[];switch(guiState.algorithm){case"single-pose":const t=await guiState.net.estimateSinglePose(e,i,flipHorizontal,n);s.push(t),o=+guiState.singlePoseDetection.minPoseConfidence,a=+guiState.singlePoseDetection.minPartConfidence}s.forEach(({score:e,keypoints:t})=>{if(e>=o&&guiState.output.showPoints){const e=t.find(e=>"leftWrist"===e.part),i=t.find(e=>"rightWrist"===e.part);hand?hand.coordinates="rightHand"===hand.name?i.position:e.position:(i||e)&&(handMesh=draw3DHand(),hand={mesh:handMesh,coordinates:i?i.position:e.position,name:i?"rightHand":"leftHand"},scene.add(handMesh))}}),requestAnimationFrame(t)}t()};